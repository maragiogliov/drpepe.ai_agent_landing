import React, { useState, useEffect } from "react";
import "./typewriter.css";

const TypewriterEffect = () => {
  const fullText = [

    `<span class="grey-10">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-20">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-30">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110 
    </span>`,
    `<span class="grey-40">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-50">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-10">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-20">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-30">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110 
    </span>`,
    `<span class="grey-40">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-50">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-20">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-30">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110 
    </span>`,
    `<span class="grey-40">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,
    `<span class="grey-50">
    01100010 01110101 01111001 00100000 01000100 01110010 01010000 
    01100101 01110000 01100101 00101110 01100001 01101001 00100000 
    01100001 01101110 01100100 00100000 01101100 01101001 01110110 
    01100101 00100000 01100110  
    </span>`,

  ];

  const [displayedText, setDisplayedText] = useState(fullText.join("\n"));
  
  useEffect(() => {
    const typewriterInterval = setInterval(() => {
      setDisplayedText((prevText) => prevText.substring(1) + prevText[0]);
    }, 10);

    return () => clearInterval(typewriterInterval);
  }, []);

  return (
    <div className="typewriter-container">
      <pre className="typewriter-text" dangerouslySetInnerHTML={{ __html: displayedText }}></pre>
    </div>
  );
};

export default TypewriterEffect;
